{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/redux/es/redux.js","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/renderer/UIconnections.js","webpack:///./src/renderer/UIfunction.js","webpack:///./src/renderer/actions.js","webpack:///./src/renderer/controllers.js","webpack:///./src/renderer/helpers/classes.js","webpack:///./src/renderer/helpers/mappingClass.js","webpack:///./src/renderer/helpers/matrix.js","webpack:///./src/renderer/helpers/midi.js","webpack:///./src/renderer/index.js","webpack:///./src/renderer/makeUI.js","webpack:///./src/renderer/mapnet.js","webpack:///./src/renderer/mapping.js","webpack:///./src/renderer/parameters.js","webpack:///./src/renderer/state.js","webpack:///./src/renderer/weights.js","webpack:///external \"electron\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,IAAI;AACf,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,SAAS;AACxB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB,eAAe;AACf;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,yDAAY;AACxB;AACA,KAAK;AACL,GAAG;AACH;AACA;;;AAGA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,yDAAY;AACvB;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG,aAAa;;AAEhB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE;AACpE;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;;;AAGA;AACA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;;AAEA,QAAQ,IAAqC;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM,IAAqC;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,IAAqC;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,8BAA8B;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA,sEAAsE,aAAa;AACnF;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,SAAS;AACtB;;AAEA;AACA,4EAA4E,aAAa;AACzF;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,6BAA6B;AAC7B;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,IAAI,KAAqC;AACzC;AACA;;AAEgI;;;;;;;;;;;;;AC3nBhI;AAAA;AAAA;AACqC;;AAErC;;AAEA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC,UAAU,IAA6B;AACxC;AACA,CAAC,MAAM,EAEN;;AAED,aAAa,4DAAQ;AACN,qEAAM,EAAC;;;;;;;;;;;;;;AClBtB;AAAA;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEkD;;;;;;;;;;;;;ACLlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACG;AACW;AACE;AACZ;AACiB;AACZ;AACJ;;AAEhC,wDAAS;AACT,eAAe,wDAAS;;AAExB;AACA,IAAI,oDAAW;AACf,IAAI,gDAAM;AACV,GAAG;AACH,yBAAyB,8CAAK;AAC9B;AACA;AACA,oBAAoB,0DAAI;AACxB;AACA,QAAQ,gDAAO,gBAAgB,+DAAmB;AAClD,+CAA+C,4DAAM;AACrD,KAAK;AACL;AACA,MAAM,+DAAmB;AACzB;AACA,eAAe,gDAAO;AACtB,YAAY,gDAAO;AACnB;AACA,SAAS;AACT,UAAU,gDAAO;AACjB;AACA,OAAO;AACP;AACA,MAAM,gDAAM;AACZ,MAAM,gDAAM;AACZ,MAAM,uDAAM;AACZ,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAA2B;AACI;;AAE/B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA,EAAE,8CAAK;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA,uBAAuB,8CAAK;AAC5B;AACA;AACA,sDAAsD,yBAAyB;AAC/E;AACA,EAAE,8CAAK;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA,EAAE,8CAAK;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA,EAAE,8CAAK;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA,EAAE,8CAAK;AACP;AACA,aAAa,gDAAO;AACpB,GAAG;AACH;;AAEA,gBAAgB,cAAc,oBAAoB,eAAe;AAClD,qEAAM;;;;;;;;;;;;;ACnDrB;AAAA;AAAA;AAAA;AAA2B;AACG;AACqB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAM;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,0BAA0B,uDAAQ;AAClC,2BAA2B,wDAAS;;AAEpC;AACA,MAAM,gDAAM,iBAAiB,8CAAK;AAClC,KAAK;;AAEL;AACA,MAAM,gDAAM,kBAAkB,8CAAK;AACnC,KAAK;;AAEL,IAAI,gDAAM,iBAAiB,8CAAK;AAChC,IAAI,gDAAM,kBAAkB,8CAAK;AACjC,GAAG;AACH;;;AAGe,wEAAS;;;;;;;;;;;;;ACtCxB;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwB;;;;;;;;;;;;;AC7BxB;AAAA;AAAA;AAA6B;;AAE7B;;AAEA;AACA;AACA;;AAEe;AACf,0BAA0B;AAC1B;AACA,sBAAsB,+CAAM;AAC5B,uBAAuB,+CAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,+CAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFA;AAAA;AAAA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA,GAAG;AACH,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAG4C;;;;;;;;;;;;;AC1B5C;AAAA;AAAA;AAAiB;;;;;;;;;;;;;ACAjB;AAAA;AAAyC;;AAEzC;AACA,MAAM,wDAAS;AACf;AACA,IAAI,wDAAS;AACb,GAAG;AACH;AACA,IAAI,wDAAS;AACb;AACA;AACA;AACA,EAAE,wDAAS;AACX,CAAC;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACa;AACM;AACb;AACH;AACT;;AAEwB;AACG;;AAEhD;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,uDAAM;;AAE7B,4BAA4B,0DAAI;;AAEhC;AACA;AACA;AACA;AACA,GAAG,QAAQ,GAAG,8CAAK;AACnB;AACA,0CAA0C,gDAAS;AACnD;AACA,MAAM,gDAAS;AACf;AACA,MAAM,uDAAM;AACZ;AACA,MAAM,gDAAM;AACZ;AACA;AACA,kBAAkB,gDAAS;AAC3B;AACA,MAAM,gDAAS;AACf;AACA,GAAG;;AAEH;AACA,SAAS,gDAAS;AAClB;;AAEA,yBAAyB,uDAAM;AAC/B;AACA,yDAAyD,gDAAS;AAClE,IAAI,gDAAS;AACb;AACA;;AAEA,4DAAiB;AACjB,+DAAc;AACd;;AAEA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAA2B;AACiB;AACP;;AAErC,qBAAqB,6DAAO;;AAE5B;AACA,EAAE,8CAAK,wCAAwC,4DAAM;AACrD;;AAEe,sEAAO;;;;;;;;;;;;;ACVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACc;AACJ;AACN;AACK;;AAEpC,oBAAoB,wDAAO,QAAQ,gDAAO;AAC1C;;AAEA,oDAAW;AACX;AACA;AACA;AACA,EAAE,8CAAK,wCAAwC,4DAAM;AACrD,CAAC;;AAE2B;;;;;;;;;;;;;AChB5B;AAAA;AAAA;AAAkD;AACb;;AAErC;AACA;AACA;AACA,eAAe;AACf,gBAAgB;AAChB,KAAK;AACL;AACA,gBAAgB;AAChB,iBAAiB;AACjB,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,iDAAiD,oBAAoB;AACrE,OAAO;AACP;AACA;AACA;AACA,iDAAiD,sBAAsB;AACvE;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,gBAAgB,6DAAe,EAAE,qBAAqB;;AAEtD,YAAY,yDAAW;AACvB;;AAEA;AACA;AACA;AACA,CAAC;;AAEc,oEAAK;;;;;;;;;;;;;AChEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACD;AACW;;AAEzC,uCAAuC,qCAAqC;;AAE5E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gDAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,MAAM,gDAAM;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,gDAAO;AACT;AACA;AACA;AACA,mDAAmD,gDAAO;AAC1D;;AAEA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA,EAAE,wDAAS;AACX;AACA;AACA,EAAE,wDAAS;AACX;;AAE+B;;;;;;;;;;;;;;;;;;;;;;;;AC1D/B,qC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error('It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && \"action \\\"\" + String(actionType) + \"\\\"\" || 'an action';\n  return \"Given \" + actionDescription + \", reducer \\\"\" + key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(\"Reducer \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle \" + ActionTypes.INIT + \" or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers);\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(\"bindActionCreators expected an object or a function, instead received \" + (actionCreators === null ? 'null' : typeof actionCreators) + \". \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(\"Dispatching while constructing your middleware is not allowed. \" + \"Other middleware would not be applied to this dispatch.\");\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \"production\". ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or setting mode to production in webpack (https://webpack.js.org/concepts/mode/) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","const weightsUI = document.querySelector('#weights')\nconst inputsUI = document.querySelector('#inputs')\nconst outputsUI = document.querySelector('#outputs')\nconst mapmodeUI = document.querySelector('#mapmode input')\n\nexport {weightsUI, inputsUI, outputsUI, mapmodeUI}\n","import state from './state'\nimport action from './actions'\nimport {mapmodeUI} from './UIconnections'\nimport {fromID, toID} from './helpers/midi'\nimport mapping from './mapping'\nimport {potentialParameters} from './parameters'\nimport {ipcRenderer} from 'electron'\nimport {render} from './weights'\n\nmapmodeUI.addEventListener('change', event => {\n  const mode = mapmodeUI.checked\n\n  if (mode) {\n    ipcRenderer.send('show-ontop')\n    action.mapmode(mode)\n  } else {\n    const currentState = state.getState()\n    let feedback = []\n    currentState.io.feedback.onmidimessage = midiMessage => {\n      feedback.push(toID(midiMessage.data))\n    }\n    [...mapping.parameters, ...potentialParameters].forEach(parameter => {\n      currentState.io.selected.output.send([...fromID(parameter), 0])\n    })\n    setTimeout(() => {\n      potentialParameters.forEach(parameter => {\n        if (feedback.includes(parameter)) {\n          if (!mapping.parameters.includes(parameter)) {\n            mapping.addParameter(parameter)\n          }\n        } else {\n          mapping.deleteParameter(parameter)\n        }\n      })\n      // currentState.io.feedback.onmidimessage = undefined\n      action.mapmode(mode)\n      action.mapping()\n      render()\n    }, 500)\n  }\n})\n","import state from './state'\nimport mapping from './mapping'\n\nconst mapmode = (mode) => {\n  // if (action.mode) {\n  //\n  // } else {\n  //   mapping.parameters.forEach((parameter, index) => {\n  //     mapping.output(parameter, 0)\n  //   })\n  // }\n  state.dispatch({\n    type: 'MAP_MODE',\n    mode\n  })\n}\n\nconst input = (input) => {\n  const currentState = state.getState()\n  currentState.io.selected.input.onmidimessage = undefined\n  input.onmidimessage = (midiMessage) => {\n    document.dispatchEvent(new CustomEvent('midiIN', {detail: midiMessage.data}))\n  }\n  state.dispatch({\n    type: 'IO::SELECT_INPUT',\n    input\n  })\n}\n\nconst output = (output) => {\n  state.dispatch({\n    type: 'IO::SELECT_OUTPUT',\n    output\n  })\n}\n\nconst available = (io) => {\n  state.dispatch({\n    type: 'IO::AVAILABLE',\n    io\n  })\n}\n\nconst savemapping = () => {\n  state.dispatch({\n    type: 'MAPPING',\n    mapping: mapping.mapping\n  })\n}\n\nconst action = {mapmode, io: {available, select: {input, output}}, mapping: savemapping}\nexport default action\n","import state from './state'\nimport action from './actions'\nimport {inputsUI, outputsUI} from './UIconnections'\n\nconst startMIDI = onmidimessage => {\n  navigator.requestMIDIAccess().then(midiAccess => {\n    const getIO = (type, midiAccess) => Array.from(midiAccess[type].entries()).map(io => io[1])\n    const allIOs = {\n      inputs: getIO('inputs', midiAccess),\n      outputs: getIO('outputs', midiAccess)\n    }\n    action.io.available(allIOs)\n\n    const makeUI = (ports, element) => {\n      ports.forEach((io, index) => {\n        const option = document.createElement('option')\n        option.value = index\n        option.innerHTML = io.name\n        element.appendChild(option)\n      })\n    }\n    makeUI(allIOs.inputs, inputsUI)\n    makeUI(allIOs.outputs, outputsUI)\n\n    inputs.addEventListener('change', e => {\n      action.io.select.input(state.getState().io.available.inputs[e.target.value])\n    })\n\n    outputs.addEventListener('change', e => {\n      action.io.select.output(state.getState().io.available.outputs[e.target.value])\n    })\n\n    action.io.select.input(state.getState().io.available.inputs[0])\n    action.io.select.output(state.getState().io.available.outputs[1])\n  })\n}\n\n\nexport default startMIDI\n","class Change {\n  constructor() {\n    this.item\n  }\n  check(i){\n    const change = this.item == i\n    this.item = i\n    return change\n  }\n}\n\nclass Counter {\n  constructor(init = 0, exclude = []){\n    this.init = init\n    this.value = this.init\n    this.exclude = exclude\n  }\n  next(){\n    this.value += 1\n    while (this.exclude.includes(this.value)) {\n      this.value += 1\n    }\n    return this.value\n  }\n  reset(){\n    return this.value = this.init\n  }\n}\n\nexport {Change, Counter}\n","import Matrix from './matrix'\n\n// TODO: store all last control values and trigger this.value when this.editWeight is triggered.\n\nconst bothMatrices = function(callback) {\n  [this.weights, this.values].forEach(callback)\n}\n\nexport default class Mapping {\n  constructor(mapping = {}) {\n    this.output\n    this.values = new Matrix()\n    this.weights = new Matrix()\n    this.controls = new Array()\n    this.parameters = new Array()\n    this.mapping = mapping\n    this.matrices = bothMatrices.bind(this)\n  }\n  input(control, value){\n    const index = this.controls.indexOf(control)\n    const controlColumn = this.weights.getColumn(index)\n    for (let i = 0; i < controlColumn.length; i++) {\n      this.values[i][index] = controlColumn[i] * value\n    }\n    console.dir(this.values);\n    for (let i = 0; i < controlColumn.length; i++) {\n      if (controlColumn[i] != 0) {\n        let outputValue = 0\n        for (let j = 0; j < this.values[i].length; j++) {\n          outputValue += this.values[i][j]\n        }\n        this.output(this.parameters[i], outputValue)\n      }\n    }\n  }\n  addControl(control){\n    this.controls.push(control)\n    this.matrices((matrix) => {\n      matrix.addColumn()\n    })\n  }\n  addParameter(parameter){\n    this.parameters.push(parameter)\n    this.matrices((matrix) => {\n      matrix.addRow()\n    })\n  }\n  deleteControl(control){\n    const index = this.controls.indexOf(control)\n    this.controls.splice(index, 1)\n    this.matrices((matrix) => {\n      matrix.deleteColumn(index)\n    })\n  }\n  deleteParameter(parameter){\n    const index = this.parameters.indexOf(parameter)\n    this.controls.splice(index, 1)\n    this.matrices((matrix) => {\n      matrix.deleteRow(index)\n    })\n  }\n  edit(row, column, value){\n    return this.weights.edit(row, column, value)\n  }\n  changeControlIndex(control, to){\n\n  }\n  changeParameterIndex(parameter, to){\n\n  }\n  get mapping() {\n    return {\n      weights: new Matrix(this.weights),\n      controls: [...this.controls],\n      parameters: [...this.parameters]\n    }\n  }\n  set mapping(newMapping) {\n    Object.assign(this, newMapping)\n  }\n}\n","const relative = (row, c, value) => {\n  row[c] = value\n  let sum = 0\n  for (let i = 0; i < row.length; i++) {\n    sum += row[i]\n  }\n  if (sum == 0) {\n    row[c] = 1\n    sum = 1\n  } else {\n    for (let i = 0; i < row.length; i++) {\n      row[i] = row[i] / sum\n    }\n  }\n  return row\n}\n\nconst absolute = (row, c, value) => {\n  const oldValue = row.splice(c, 1)[0]\n  if (oldValue == 1) {\n    for (let i = 0; i < row.length; i++) {\n      row.fill((1 - value)/row.length)\n    }\n  } else {\n    for (let i = 0; i < row.length; i++) {\n      row[i] = (row[i] / (1 - oldValue)) * (1 - value)\n    }\n  }\n  row.splice(c, 0, value)\n  return row\n}\n\nexport default class Matrix extends Array {\n  constructor(matrix = []) {\n    super(...matrix)\n    this._columns = matrix._columns || 0\n  }\n\n  setRow(index, array) {\n    return this[index] = array\n  }\n\n  setColumn(index, array) {\n    this.forEach((row, i) => {\n      this[i][index] = array[i]\n    })\n    return this\n  }\n\n  getColumn(index){\n    let column = []\n    for (let i = 0; i < this.length; i++) {\n      column[i] = this[i][index]\n    }\n    return column\n  }\n\n  addRow() {\n    let row = new Array(this._columns).fill(0)\n    row[this._columns <= this.length ? this._columns -1 : this.length] = 1\n    this.push(row)\n    return this\n  }\n\n  addColumn() {\n    this.forEach((row, i) => {\n      this[i].push(0)\n    })\n    this._columns += 1\n    return this\n  }\n\n  edit(r, c, value){\n    // absolute(this[r], c, value)\n    const row = absolute(this[r], c, value)\n    this[r] = row\n    return row\n  }\n\n  deleteRow(index) {\n    if (this.length > 0) {\n      this.splice(index, 1)\n    }\n    return this\n  }\n\n  deleteColumn(index) {\n    if (this.length != 0) {\n      this.forEach((row, i) => {\n        this[i].splice(index, 1)\n      })\n      this._columns -= 1\n    }\n    return this\n  }\n}\n","const midiParse = midiMessage => {\n  return {\n    type: (midiMessage.data[0] >> 4) - 9,\n    index: midiMessage.data[1],\n    value: midiMessage.data[2] / 127,\n    midiChannel: (midiMessage.data[0] & 15) + 1\n  }\n}\n\nconst midiFormat = midi => {\n  return [\n    ((midi.type + 9) << 4) | (midi.midiChannel -1),\n    midi.index,\n    midi.value * 127\n  ]\n}\n\nconst toID = (array) => {\n  return (array[0] << 7) | array[1]\n}\n\nconst fromID = (id) => {\n  return [id >> 7, id & 127]\n}\n\n\nexport {midiFormat, midiParse, toID, fromID}\n","import './mapnet'\nimport './makeUI'","import {mapmodeUI} from './UIconnections'\n\ndocument.querySelector('#mapmode').addEventListener('click', (event) => {\n  if (mapmodeUI.checked) {\n    event.target.classList.remove('checked')\n    mapmodeUI.checked = false\n  } else {\n    event.target.classList.add('checked')\n    mapmodeUI.checked = true\n  }\n  let evt = document.createEvent(\"HTMLEvents\");\n  evt.initEvent(\"change\", false, true);\n  mapmodeUI.dispatchEvent(evt);\n})\n","import state from './state'\nimport {Change} from './helpers/classes'\nimport {toID, midiParse} from './helpers/midi'\nimport mapMatrix from './mapping'\nimport action from './actions'\nimport './UIfunction'\n\nimport connectController from './controllers'\nimport {render, connectWeights} from './weights'\n\n// TERMINOLOGY\n// control: midi input to be mapped\n// weight: the factor that scales the value of a control targeted to a specific parameter\n// parameter: a parameter on a DAW that is MIDI mappable\n\n// newControl.check(value) returns true if value != previousValue\nconst newControl = new Change()\n\nconst parseMIDI = event => [toID(event.detail), value = event.detail[2]]\n\n// MIDI INPUT\n// add when mapmode in on and map when it's off\ndocument.addEventListener('midiIN', event => {\n  const [id, value] = parseMIDI(),\n  {mapmode} = state.getState()\n  // if the midi id is different than the previous one, and mapmode is on, and the id is not allready mapped\n  if (newControl.check(id) && mapmode && !mapMatrix.controls.includes(id)){\n    // add a new column\n      mapMatrix.addControl(id)\n    // update UI\n      render()\n    // and ?\n      action.mapping()\n    }\n  // if the mapmode is off and the midi id is mapped\n  if (!mapmode && mapMatrix.controls.includes(id)) {\n    // send a value to the mapper matrix\n      mapMatrix.input(id, value / 127)\n    }\n  })\n\nconst weightIn = (r, c, value) => {\n  return mapMatrix.edit(r, c, value)\n}\n\nconst newParameter = new Change()\nconst parameterIn = id => {\n  if (newParameter.check(id) && currentState.mapmode && !mapMatrix.parameters.includes(id)) {\n    mapMatrix.addParameter(id)\n  }\n}\n\nconnectController()\nconnectWeights(weightIn)\n// connectParameters(parameterIn)\n\n// connectGUI()\n//\n// test init\n// for (let i = 0; i < 2; i++) {\n//   mapMatrix.addControl(toID([176, i]))\n// }\n//\n// for (let i = 0; i < 2; i++) {\n//   mapMatrix.addParameter(toID([176, i]))\n// }\n\n// render()\n// const currentState = state.getState()\n// console.dir(currentState.input);\n","import state from './state'\nimport Mapping from './helpers/mappingClass'\nimport {fromID} from './helpers/midi'\n\nwindow.mapping = new Mapping()\n\nmapping.output = (id, value) => {\n  state.getState().io.selected.output.send([...fromID(id), value * 127])\n}\n\nexport default mapping\n","import state from './state'\nimport {Counter} from './helpers/classes'\nimport {fromID} from './helpers/midi'\nimport mapping from './mapping'\nimport {ipcRenderer} from 'electron'\n\nconst counter = new Counter(22528, mapping.parameters)\nconst potentialParameters = []\n\nipcRenderer.on('ontop-clicked-los', () => {\n  const message = counter.next()\n  // controlIn(message)\n  potentialParameters.push(message)\n  state.getState().io.selected.output.send([...fromID(message), 0])\n})\n\nexport {potentialParameters}\n","import {combineReducers, createStore} from 'redux'\nimport Matrix from './helpers/matrix'\n\nconst io = (state, action) => {\n  state = state ? state : {\n    selected: {\n      input: {},\n      output: {},\n    },\n    available: {\n      inputs: {},\n      outputs: {},\n    },\n    // feedback contains MIDI outputs that correspond to the selected midi inputs\n    // these are usefull for sending feedback to the MIDI controler\n    feedback: {},\n  }\n  switch (action.type) {\n    case 'IO::SELECT_INPUT':\n      return Object.assign(state, {\n        selected: Object.assign(state.selected, {input: action.input})\n      })\n      break\n    case 'IO::SELECT_OUTPUT':\n      return Object.assign(state, {\n        selected: Object.assign(state.selected, {output: action.output}),\n        feedback: state.available.inputs.find(input => input.name == action.output.name || input.id == action.output.id)\n      })\n      break\n    case 'IO::AVAILABLE':\n    return Object.assign(state, {\n      available: Object.assign(state.available, action.io)\n    })\n    default:\n      return state\n  }\n}\n\nconst mapmode = (state = false, action) => {\n  if (action.type == 'MAP_MODE') {\n    return action.mode\n  } else {\n    return state\n  }\n}\n\nconst mapping = (state = {}, action) => {\n  if (action.type == 'MAPPING') {\n    return action.mapping\n  } else {\n    return state\n  }\n}\n\nconst reducer = combineReducers({io, mapmode, mapping})\n\nlet state = createStore(reducer)\nwindow.state = state\n\nstate.subscribe(() => {\n  const c = state.getState()\n  console.dir(c);\n})\n\nexport default state\n","import mapping from './mapping'\nimport action from './actions'\nimport {weightsUI} from './UIconnections'\n\nconst grayscale = brightness => `rgb(${[brightness, brightness, brightness]})`\n\n// TODO: on mapmode pass MIDI messages through, from the controller to the DAW.\n//       That way a one-by-one matrix is made.\n\nlet table;\nlet callback;\nlet saveCallback;\n\nconst clicking = (rowElement, r, c) => {\n  return event => {\n    const initY = event.clientY\n    const weight = mapping.weights[r][c]\n    const dragging = event => {\n      let value = (initY - event.clientY) * 0.006 + weight\n      value = value > 1 ? 1 : value < 0 ? 0 : value\n      const newColumn = callback(r, c, value)\n      rowElement.childNodes.forEach((item, i) => {\n        item.style.backgroundColor = grayscale(255 - newColumn[i] * 255)\n      })\n    }\n    document.addEventListener('mousemove', dragging)\n    const mouseup = event => {\n      action.mapping()\n      document.removeEventListener('mousemove', dragging)\n      document.removeEventListener('mouseup', mouseup)\n    }\n    document.addEventListener('mouseup', mouseup)\n  }\n}\n\nconst render = () => {\n  table.innerHTML = ''\n  mapping.weights.forEach((row, r) => {\n    const rowElement = document.createElement('tr')\n    row.forEach((cell, c) => {\n      const item = document.createElement('th')\n      item.style.backgroundColor = grayscale(255 - mapping.weights[r][c] * 255)\n      item.onmousedown = clicking(rowElement, r, c)\n\n      rowElement.appendChild(item)\n    })\n    table.appendChild(rowElement)\n  })\n}\n\nconst connectWeights = cb => {\n  callback = cb\n  weightsUI.innerHTML = ''\n  table = document.createElement('table')\n  render()\n  weightsUI.appendChild(table)\n}\n\nexport {connectWeights, render}\n","module.exports = require(\"electron\");"],"sourceRoot":""}